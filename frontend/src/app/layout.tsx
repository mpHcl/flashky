import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import Link from "next/link";
import Image from 'next/image';
import "./globals.css";
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import { Drawer, List, ListItem, ListItemText, Box } from '@mui/material';
import TextField from '@mui/material/TextField';
import Stack from '@mui/material/Stack';
import Typography from '@mui/material/Typography';
import { ThemeProvider } from '@mui/material/styles';
import theme from "./theme";



const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const routes = [
  {name: "Home", route: "/"},
  {name: "Profile", route: "/profile"},
  {name: "My Decks", route: "/mydecks"},
  {name: "My Flashky", route: "/myflashky"},
]

const drawerWidth = 200;

export function SimpleSidebar() {
  return (
      <Drawer
        variant="permanent"
        anchor="left"
        sx={{
          width: drawerWidth,
          '& .MuiDrawer-paper': {
            width: drawerWidth,
            backgroundColor: 'primary.light',
            boxSizing: 'border-box',
            paddingTop: 2,
          },
        }}
      >
        <List>
          {routes.map((el) => (
            <ListItem button='true' key={el.name} component="a" href={el.route}>
              <ListItemText disableTypography><Typography color={"white"}>{el.name}</Typography></ListItemText>
            </ListItem>
          ))}
        </List>
      </Drawer>
  );
}

export function SearchBox() {
  return (
    <Box display="flex" justifyContent="center" alignItems="center">
      <TextField placeholder="Find decks and flashky" fullWidth size="small" variant="outlined" color="primary" sx={{
      '& .MuiOutlinedInput-root': {backgroundColor: 'primary.light'}}}/>
    </Box>
  );
}

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body>
        <AppRouterCacheProvider>
          <ThemeProvider theme={theme}>
            <Box sx={{ display: 'flex', margin: 2 }}>
              <SimpleSidebar />
              <Stack spacing={5} sx={{ width: '100%' }}>
                <SearchBox />
                {children}
              </Stack>
            </Box>
          </ThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
